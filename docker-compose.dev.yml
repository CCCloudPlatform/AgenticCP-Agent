version: '3.8'

services:
  # PostgreSQL 데이터베이스 (개발용)
  postgres:
    image: postgres:15-alpine
    container_name: agenticcp-agent-postgres-dev
    environment:
      POSTGRES_DB: agenticcp_agent_dev
      POSTGRES_USER: agenticcp_dev
      POSTGRES_PASSWORD: agenticcp_dev123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - agenticcp-dev-network

  # Redis (개발용)
  redis:
    image: redis:7-alpine
    container_name: agenticcp-agent-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - agenticcp-dev-network

  # AgenticCP Agent 애플리케이션 (개발용)
  agent:
    build: .
    container_name: agenticcp-agent-dev
    environment:
      - DATABASE_URL=postgresql+asyncpg://agenticcp_dev:agenticcp_dev123@postgres:5432/agenticcp_agent_dev
      - DATABASE_URL_SYNC=postgresql://agenticcp_dev:agenticcp_dev123@postgres:5432/agenticcp_agent_dev
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - SECRET_KEY=dev-secret-key-not-for-production
      - LOG_LEVEL=DEBUG
      - CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080", "http://localhost:8000"]
      - MULTI_AGENT_LLM_PROVIDER=bedrock
      - MULTI_AGENT_OPENAI_MODEL=gpt-4o-mini
      - MULTI_AGENT_BEDROCK_MODEL_ID=amazon.titan-embed-text-v2:0
      - MULTI_AGENT_AWS_REGION=ap-northeast-2
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - agenticcp-dev-network
    restart: unless-stopped

  # 개발용 데이터베이스 관리 도구
  adminer:
    image: adminer:4.8.1
    container_name: agenticcp-agent-adminer-dev
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - agenticcp-dev-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  agenticcp-dev-network:
    driver: bridge

version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: ${POSTGRES_CONTAINER_NAME:-agenticcp-agent-postgres}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-agenticcp_agent}
      POSTGRES_USER: ${POSTGRES_USER:-agenticcp}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-agenticcp123}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - agenticcp-network
    restart: unless-stopped

  # Redis (캐싱 및 세션)
  redis:
    image: redis:7-alpine
    container_name: ${REDIS_CONTAINER_NAME:-agenticcp-agent-redis}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - agenticcp-network
    restart: unless-stopped

  # AgenticCP Agent 애플리케이션
  agent:
    build: .
    container_name: ${AGENT_CONTAINER_NAME:-agenticcp-agent}
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-agenticcp}:${POSTGRES_PASSWORD:-agenticcp123}@postgres:5432/${POSTGRES_DB:-agenticcp_agent}
      - DATABASE_URL_SYNC=postgresql://${POSTGRES_USER:-agenticcp}:${POSTGRES_PASSWORD:-agenticcp123}@postgres:5432/${POSTGRES_DB:-agenticcp_agent}
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8000}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CORS_ORIGINS=${CORS_ORIGINS:-["http://localhost:3000", "http://localhost:8080"]}
      - MULTI_AGENT_LLM_PROVIDER=${MULTI_AGENT_LLM_PROVIDER:-bedrock}
      - MULTI_AGENT_OPENAI_API_KEY=${MULTI_AGENT_OPENAI_API_KEY}
      - MULTI_AGENT_OPENAI_MODEL=${MULTI_AGENT_OPENAI_MODEL:-gpt-4o-mini}
      - MULTI_AGENT_BEDROCK_MODEL_ID=${MULTI_AGENT_BEDROCK_MODEL_ID:-amazon.titan-embed-text-v2:0}
      - MULTI_AGENT_AWS_ACCESS_KEY_ID=${MULTI_AGENT_AWS_ACCESS_KEY_ID}
      - MULTI_AGENT_AWS_SECRET_ACCESS_KEY=${MULTI_AGENT_AWS_SECRET_ACCESS_KEY}
      - MULTI_AGENT_AWS_REGION=${MULTI_AGENT_AWS_REGION:-ap-northeast-2}
    ports:
      - "${AGENT_PORT:-8000}:8000"
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - agenticcp-network
    restart: unless-stopped

  # 개발용 데이터베이스 관리 도구 (개발 환경에서만 실행)
  adminer:
    image: adminer:4.8.1
    container_name: ${ADMINER_CONTAINER_NAME:-agenticcp-agent-adminer}
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    depends_on:
      - postgres
    networks:
      - agenticcp-network
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  agenticcp-network:
    driver: bridge

